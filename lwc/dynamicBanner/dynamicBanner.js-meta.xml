<?xml version="1.0" encoding="UTF-8"?>
<LightningComponentBundle xmlns="http://soap.sforce.com/2006/04/metadata">
    <masterLabel>Dynamic Banner</masterLabel>
    <description>Add a highly customizable banner or button to any record page. Supports dynamic display of record data.</description>
    <apiVersion>55.0</apiVersion>
    <isExposed>true</isExposed>

    <targets>
        <target>lightning__HomePage</target>
        <target>lightning__RecordPage</target>
        <target>lightning__AppPage</target>
    </targets>

    <targetConfigs>
        <targetConfig targets="lightning__HomePage, lightning__RecordPage, lightning__AppPage">
            <property name="title1"       label="Main Title"            type="String"  required="false" placeholder="Optional Title"                             description="If provided, a bold title will be added to the top-left of the block. Supports dynamic field replacement (see Main Text description)." />
            <property name="text1"        label="Main Text"             type="String"  required="false" default="This is {{Name}}"                               description="Text for the banner. Supports common HTML (https://developer.salesforce.com/docs/component-library/bundle/lightning-formatted-rich-text/documentation) and dynamic field insertion. To insert a field, wrap its API Field Name in double curly braces {{}}. For example, {{Field_Name__c}} OR {{Parent_Object__r.Field_Name__c}}. For polymorphic relationships include the target SObject type in parentheses before the polymorphic relationship field, like {{(Case)What.Description}}." />
            <property name="bannerLink1"  label="Record ID or Link URL" type="String"  required="false" placeholder="Make the banner act as a button link"       description="An absolute or relative link that makes the whole banner clickable. Supports dynamic field replacement (see Main Text description). If the Link Type is for a Record Page, this should just be the target record ID." />
            <property name="linkType1"    label="Link Type"             type="String"  required="false" datasource="Record Page, Web Page" default="Record Page" description="" />
            <property name="linkNewTab1"  label="Open Record Page Link in New Tab?"    type="Boolean"   default="false"                                          description="For Record Page links only, decide if the link should open in a new tab or not. Web Page links always open in a new tab." />
            <property name="bold1"        label="Bold?"                 type="Boolean"                  default="true"                                           description="Makes the text bold." />
            <property name="classes1"     label="CSS Classes"           type="String"  required="false" placeholder="slds-theme_warning slds-m-bottom_xx-large"  description="CSS classes to apply to the entire banner DIV element. Separate multiple classes with spaces as you would in traditional HTML. Note: Style options, like Background Color, will override related class styling." />
            <property name="background1"  label="Background Color"      type="String"  required="false" default="#479FDA"                                      description="Background color formatted for CSS, like #4488FF, #48F, hotpink, rgb(255, 0, 255), or rgba(255, 0, 255, .5)." />
            <property name="fontColor1"   label="Font Color"            type="String"  required="false" default="white"                                          description="Font color formatted for CSS, like #4488FF, #48F, hotpink, rgb(255, 0, 255), or rgba(255, 0, 255, .5)." />
            <property name="fontSize1"    label="Font Size"             type="String"  required="false" default="16pt"                                           description="Font size formatted for CSS, like 16pt, small, or 12px." />
            <property name="alignment1"   label="Text Alignment"        type="String"  required="false" default="center"                                         datasource="left, center, right, justify" />
            <property name="border1"      label="Border?"               type="Boolean"                  default="false"                                          description="Applies a border." />
            <property name="borderColor1" label="Border Color"          type="String"  required="false" placeholder="steelblue, #FFF, rgba(255, 0, 255, .7)"   description="Border color formatted for CSS, like #4488FF, #48F, hotpink, rgb(255, 0, 255), or rgba(255, 0, 255, .5)." />
            <property name="borderWidth1" label="Border Width"          type="String"  required="false" placeholder="3px, thick, 1em"                            description="Border size formatted for CSS, like 2pt, thick, or 4px." />

            <property name="boxShadow"   label="Box Shadow?"         type="Boolean"                  default="true"                         description="Applies a subtle shadow to the component using standard Salesforce styling." />
            <property name="collapsable" label="Collapsable?"        type="Boolean"                  default="false"                        description="Adds an icon to allow the banner to collapse. A collapsed banner shows only the title." />
            <property name="collapse"    label="Start collapsed?"    type="Boolean"                  default="false"                        description="Check this box to make the banner collapsed by default. Changes are not remembered - this default is used every time the component is loaded." />
            <property name="direction"   label="Double Banner Style" type="String"  required="false" default="row" datasource="row, column" description="How to orient two banners when using both - 'row' puts them side-by-side, 'column' stacks them vertically." />

            <property name="title2"       label="Second Title"           type="String"  required="false" placeholder="Optional Title"                             description="If provided, a bold title will be added to the top-left of the block. Supports dynamic field replacement (see Main Text description)." />
            <property name="text2"        label="Second Text (optional)" type="String"  required="false" default=""                                               description="Text for the banner. Supports common HTML (https://developer.salesforce.com/docs/component-library/bundle/lightning-formatted-rich-text/documentation) and dynamic field insertion. To insert a field, wrap its API Field Name in double curly braces {{}}. For example, {{Field_Name__c}} OR {{Parent_Object__r.Field_Name__c}}. For polymorphic relationships include the target SObject type in parentheses before the polymorphic relationship field, like {{(Case)What.Description}}." />
            <property name="bannerLink2"  label="Record ID or Link URL"  type="String"  required="false" placeholder="Make the banner act as a button link."      description="An absolute or relative link that makes the whole banner clickable. Supports dynamic field replacement (see Main Text description). If the Link Type is for a Record Page, this should just be the target record ID." />
            <property name="linkType2"    label="Link Type"              type="String"  required="false" datasource="Record Page, Web Page" default="Record Page" description="" />
            <property name="linkNewTab2"  label="Open Record Page Link in New Tab?"     type="Boolean"   default="false"                                          description="For Record Page links only, decide if the link should open in a new tab or not. Web Page links always open in a new tab." />
            <property name="bold2"        label="Bold?"                  type="Boolean"                  default="true"                                           description="Makes the text bold." />
            <property name="classes2"     label="CSS Classes"            type="String"  required="false" placeholder="slds-theme_warning slds-m-bottom_xx-large"  description="CSS classes to apply to the entire banner DIV element. Separate multiple classes with spaces as you would in traditional HTML. Note: Style options, like Background Color, will override related class styling." />
            <property name="background2"  label="Background Color"       type="String"  required="false" default="#479FDA"                                      description="Background color formatted for CSS, like #4488FF, #48F, hotpink, rgb(255, 0, 255), or rgba(255, 0, 255, .5)." />
            <property name="fontColor2"   label="Font Color"             type="String"  required="false" default="white"                                          description="Font color formatted for CSS, like #4488FF, #48F, hotpink, rgb(255, 0, 255), or rgba(255, 0, 255, .5)." />
            <property name="fontSize2"    label="Font Size"              type="String"  required="false" default="16pt"                                           description="Font size formatted for CSS, like 16pt, small, or 12px." />
            <property name="alignment2"   label="Text Alignment"         type="String"  required="false" default="center"                                         datasource="left, center, right, justify" />
            <property name="border2"      label="Border?"                type="Boolean"                  default="false"                                          description="Applies a border." />
            <property name="borderColor2" label="Border Color"           type="String"  required="false" placeholder="steelblue, #FFF, rgba(255, 0, 255, .7)"   description="Border color formatted for CSS, like #4488FF, #48F, hotpink, rgb(255, 0, 255), or rgba(255, 0, 255, .5)." />
            <property name="borderWidth2" label="Border Width"           type="String"  required="false" placeholder="3px, thick, 1em"                            description="Border size formatted for CSS, like 2pt, thick, or 4px." />

            <property name="visibilityFilters" label="Visibility Filters" type="String"  required="false" placeholder="(Case)What.Owner.Name = Jane Doe" description='Similar to traditional Visibility Filters, but it supports polymorphic relationships, which is helpful when working with some objects, like Tasks. Component will display if it satisfies the conditions. Use a double-colon "::" to separate multiple filters and use Visibility Logic below to assign special logic (otherwise all filters must be true). Write the filter out as an equation, like "Related_Object__r.Field__c = Some Value". Use "null" to reference an empty value, like "Related_Object__r.Field__c != null". Supports these operators: =, ==, !=, >, >= (and similar ones that use the "less than" symbol). Supports dynamic field insertion. To insert a field, wrap its API Field Name in double curly braces {{}}. For example, {{Field_Name__c}} OR {{Parent_Object__r.Field_Name__c}}. For polymorphic relationships include the target SObject type in parentheses before the polymorphic relationship field, like {{(Case)What.Description}}.' />
            <property name="visibilityLogic"   label="Visibility Logic"   type="String"  required="false" placeholder="1 AND (2 OR 3)"                   description='Similar to other custom logic in Salesforce. Use numbers to reference each of the filters along with parentheses, AND, OR, and NOT. Also supports coded operators double-ampersands, "||", and "!".' />
        </targetConfig>
    </targetConfigs>
</LightningComponentBundle>